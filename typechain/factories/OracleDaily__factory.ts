/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleDaily, OracleDailyInterface } from "../OracleDaily";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "day",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_dailyBlockCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dailyGasFees",
        type: "uint256",
      },
    ],
    name: "addDaily",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dailyBlockCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dailyGasFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100596040518060400160405280601781526020017f4465706c6f79696e672061204f7261636c654461696c7900000000000000000081525061005e60201b6101691760201c565b6101e1565b6100fa81604051602401610072919061015f565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100fd60201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600061013182610181565b61013b818561018c565b935061014b81856020860161019d565b610154816101d0565b840191505092915050565b600060208201905081810360008301526101798184610126565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101bb5780820151818401526020810190506101a0565b838111156101ca576000848401525b50505050565b6000601f19601f8301169050919050565b6105a4806101f06000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638ff923bc14610046578063ad4ceab514610076578063cd0e230e14610092575b600080fd5b610060600480360381019061005b91906102a8565b6100c2565b60405161006d9190610402565b60405180910390f35b610090600480360381019061008b91906102e9565b6100f0565b005b6100ac60048036038101906100a791906102a8565b61013b565b6040516100b99190610402565b60405180910390f35b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b8160008460405161010191906103c9565b9081526020016040518091039020819055508060018460405161012491906103c9565b908152602001604051809103902081905550505050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6101ff8160405160240161017d91906103e0565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600061023e61023984610442565b61041d565b90508281526020810184848401111561025657600080fd5b6102618482856104a4565b509392505050565b600082601f83011261027a57600080fd5b813561028a84826020860161022b565b91505092915050565b6000813590506102a281610557565b92915050565b6000602082840312156102ba57600080fd5b600082013567ffffffffffffffff8111156102d457600080fd5b6102e084828501610269565b91505092915050565b6000806000606084860312156102fe57600080fd5b600084013567ffffffffffffffff81111561031857600080fd5b61032486828701610269565b935050602061033586828701610293565b925050604061034686828701610293565b9150509250925092565b600061035b82610473565b610365818561047e565b93506103758185602086016104b3565b61037e81610546565b840191505092915050565b600061039482610473565b61039e818561048f565b93506103ae8185602086016104b3565b80840191505092915050565b6103c38161049a565b82525050565b60006103d58284610389565b915081905092915050565b600060208201905081810360008301526103fa8184610350565b905092915050565b600060208201905061041760008301846103ba565b92915050565b6000610427610438565b905061043382826104e6565b919050565b6000604051905090565b600067ffffffffffffffff82111561045d5761045c610517565b5b61046682610546565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156104d15780820151818401526020810190506104b6565b838111156104e0576000848401525b50505050565b6104ef82610546565b810181811067ffffffffffffffff8211171561050e5761050d610517565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105608161049a565b811461056b57600080fd5b5056fea2646970667358221220704d97acb5f61a2629a4ef9baf85118481db6a05f81afa556df318e267d2aa6664736f6c63430008040033";

export class OracleDaily__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleDaily> {
    return super.deploy(overrides || {}) as Promise<OracleDaily>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleDaily {
    return super.attach(address) as OracleDaily;
  }
  connect(signer: Signer): OracleDaily__factory {
    return super.connect(signer) as OracleDaily__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleDailyInterface {
    return new utils.Interface(_abi) as OracleDailyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleDaily {
    return new Contract(address, _abi, signerOrProvider) as OracleDaily;
  }
}
