/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleDaily, OracleDailyInterface } from "../OracleDaily";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "day",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_dailyBlockCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dailyGasFees",
        type: "uint256",
      },
    ],
    name: "addDaily",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dailyBlockCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dailyGasFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200008360201b60201c565b6200008b60201b60201c565b6200007d6040518060400160405280601781526020017f4465706c6f79696e672061204f7261636c654461696c790000000000000000008152506200014f60201b620003f31760201c565b620002e3565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001ef816040516024016200016691906200025c565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620001f260201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000620002288262000280565b6200023481856200028b565b9350620002468185602086016200029c565b6200025181620002d2565b840191505092915050565b600060208201905081810360008301526200027881846200021b565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620002bc5780820151818401526020810190506200029f565b83811115620002cc576000848401525b50505050565b6000601f19601f8301169050919050565b610aa980620002f36000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b146100715780638ff923bc1461008f578063ad4ceab5146100bf578063cd0e230e146100db578063f2fde38b1461010b575b600080fd5b61006f610127565b005b6100796101af565b60405161008691906107c9565b60405180910390f35b6100a960048036038101906100a4919061063c565b6101d8565b6040516100b69190610846565b60405180910390f35b6100d960048036038101906100d4919061067d565b610206565b005b6100f560048036038101906100f0919061063c565b6102cd565b6040516101029190610846565b60405180910390f35b61012560048036038101906101209190610613565b6102fb565b005b61012f61048c565b73ffffffffffffffffffffffffffffffffffffffff1661014d6101af565b73ffffffffffffffffffffffffffffffffffffffff16146101a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019a90610826565b60405180910390fd5b6101ad6000610494565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b61020e61048c565b73ffffffffffffffffffffffffffffffffffffffff1661022c6101af565b73ffffffffffffffffffffffffffffffffffffffff1614610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027990610826565b60405180910390fd5b8160018460405161029391906107b2565b908152602001604051809103902081905550806002846040516102b691906107b2565b908152602001604051809103902081905550505050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b61030361048c565b73ffffffffffffffffffffffffffffffffffffffff166103216101af565b73ffffffffffffffffffffffffffffffffffffffff1614610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610826565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de90610806565b60405180910390fd5b6103f081610494565b50565b6104898160405160240161040791906107e4565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610558565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600061059461058f84610886565b610861565b9050828152602081018484840111156105ac57600080fd5b6105b784828561091a565b509392505050565b6000813590506105ce81610a45565b92915050565b600082601f8301126105e557600080fd5b81356105f5848260208601610581565b91505092915050565b60008135905061060d81610a5c565b92915050565b60006020828403121561062557600080fd5b6000610633848285016105bf565b91505092915050565b60006020828403121561064e57600080fd5b600082013567ffffffffffffffff81111561066857600080fd5b610674848285016105d4565b91505092915050565b60008060006060848603121561069257600080fd5b600084013567ffffffffffffffff8111156106ac57600080fd5b6106b8868287016105d4565b93505060206106c9868287016105fe565b92505060406106da868287016105fe565b9150509250925092565b6106ed816108de565b82525050565b60006106fe826108b7565b61070881856108c2565b9350610718818560208601610929565b610721816109bc565b840191505092915050565b6000610737826108b7565b61074181856108d3565b9350610751818560208601610929565b80840191505092915050565b600061076a6026836108c2565b9150610775826109cd565b604082019050919050565b600061078d6020836108c2565b915061079882610a1c565b602082019050919050565b6107ac81610910565b82525050565b60006107be828461072c565b915081905092915050565b60006020820190506107de60008301846106e4565b92915050565b600060208201905081810360008301526107fe81846106f3565b905092915050565b6000602082019050818103600083015261081f8161075d565b9050919050565b6000602082019050818103600083015261083f81610780565b9050919050565b600060208201905061085b60008301846107a3565b92915050565b600061086b61087c565b9050610877828261095c565b919050565b6000604051905090565b600067ffffffffffffffff8211156108a1576108a061098d565b5b6108aa826109bc565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006108e9826108f0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561094757808201518184015260208101905061092c565b83811115610956576000848401525b50505050565b610965826109bc565b810181811067ffffffffffffffff821117156109845761098361098d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610a4e816108de565b8114610a5957600080fd5b50565b610a6581610910565b8114610a7057600080fd5b5056fea2646970667358221220625c88c1fa1ada8e383bff9d4af9b645ae277b3a5cecb2e4326404028e3d15bc64736f6c63430008040033";

export class OracleDaily__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleDaily> {
    return super.deploy(overrides || {}) as Promise<OracleDaily>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleDaily {
    return super.attach(address) as OracleDaily;
  }
  connect(signer: Signer): OracleDaily__factory {
    return super.connect(signer) as OracleDaily__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleDailyInterface {
    return new utils.Interface(_abi) as OracleDailyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleDaily {
    return new Contract(address, _abi, signerOrProvider) as OracleDaily;
  }
}
